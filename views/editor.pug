doctype html
html
	head
		title #{i18n.__("editor.title")} - #{fileName}
		<!--Import Google Icon Font-->
		link(rel="stylesheet", href="/static/css/icon.css")
		<!--Import materialize.css-->
		link(rel="stylesheet", href="/static/css/materialize.min.css", media="screen, projection")
		link(rel="stylesheet", href="/static/css/simplemde.min.css")
		link(rel="stylesheet", href="/static/css/customize.css")
		<!--Let browser know website is optimized for mobile-->
		meta(name="viewport", content="width=device-width, initial-scale=1.0")
	body
		header
			nav.top-nav
				.container
					.nav-wrapper
						a.page-title.brand-logo.truncate #{i18n.__("editor.page-title")} - #{fileName}
						ul.right.hide-on-large-only
							li
								a.dropdown-button(data-activates='nav-dropdown')
									i.material-icons menu
						ul.dropdown-content#nav-dropdown
							li
								a.waves-effect(href="/!") #{i18n.__("nav.dashboard")}
							li
								a.waves-effect(href="/!post") #{i18n.__("nav.posts")}
							li
								a.waves-effect(href="/!page") #{i18n.__("nav.pages")}
							li
								a.waves-effect(href="/!logout") #{i18n.__("nav.logout")}
							li
								a.waves-effect(href="/!stats") #{i18n.__("nav.stats")}
							li
								a.waves-effect(href="/!about") #{i18n.__("nav.about")}
			ul.side-nav.fixed
				li
					a.nav-logo(href="/")
						i.material-icons local_cafe
						| #{i18n.__("nav-logo")}
				li
					.divider
				li
					a.subheader #{i18n.__("nav.subheader1")}
				li
					a.waves-effect(href="/!") #{i18n.__("nav.dashboard")}
				li
					a.waves-effect(href="/!post") #{i18n.__("nav.posts")}
				li
					a.waves-effect(href="/!page") #{i18n.__("nav.pages")}
				li
					a.waves-effect(href="/!logout") #{i18n.__("nav.logout")}
				li
					.divider
				li
					a.subheader #{i18n.__("nav.subheader2")}
				li
					a.waves-effect(href="/!stats") #{i18n.__("nav.stats")}
				li
					a.waves-effect(href="/!about") #{i18n.__("nav.about")}
		main
			.container
				.row
					.col.s12.m12.l12
						.toolbar.center
							ul
								li
									a.waves-effect.waves-light.btn#cancel
										i.material-icons.left refresh
										| #{i18n.__("editor.section1.toolbar.reload")}
								li
									a.waves-effect.waves-light.btn#save
										i.material-icons.left save
										| #{i18n.__("editor.section1.toolbar.save")}
								li
									a.waves-effect.waves-light.btn.modal-trigger(href="#deleteConfirm")
										i.material-icons.left delete
										| #{i18n.__("editor.section1.toolbar.delete")}
								if post_asset_folder
									li
										a.waves-effect.waves-light.btn#showUpload
											i.material-icons.left file_upload
											| #{i18n.__("editor.section1.toolbar.upload")}
									li
										a.waves-effect.waves-light.btn.rightest#assets
											i.material-icons.left view_array
											| #{i18n.__("editor.section1.toolbar.assets")}
						p.caption #{i18n.__("editor.section1.toolbar.caption")}
						textarea.editor
		.modal#deleteConfirm
			.modal-content
				h4 #{i18n.__("editor.modal.deleteConfirm.h4")}
				p #{i18n.__("editor.modal.deleteConfirm.p1")}
				p #{i18n.__("editor.modal.deleteConfirm.p2")}
			.modal-footer
				a.modal-action.modal-close.waves-effect.waves-red.btn-flat #{i18n.__("editor.modal.deleteConfirm.a1")}
				a.modal-action.modal-close.waves-effect.waves-green.btn-flat#delete #{i18n.__("editor.modal.deleteConfirm.a2")}
		.modal#uploadFile
			.modal-content
				h4 #{i18n.__("editor.modal.uploadFile.h4")}
				h5 #{i18n.__("editor.modal.uploadFile.h5")}
				form(enctype="multipart/form-data", method="post", name="fileinfo", id="uploadForm")
					a.waves-effect.waves-light.btn-large#selectFile
						i.material-icons.left attach_file
						| #{i18n.__("editor.modal.uploadFile.form.a")}
					input(type="file", id="open", name="file", hidden=true)
				p
			.modal-footer
				a.modal-action.modal-close.waves-effect.waves-red.btn-flat #{i18n.__("editor.modal.uploadFile.a1")}
				a.modal-action.modal-close.waves-effect.waves-green.btn-flat#upload #{i18n.__("editor.modal.uploadFile.a2")}
		.modal#uploading
			.modal-content
				h4 #{i18n.__("editor.modal.uploading.h4")}
				.progress
					.indeterminate
			.modal-footer
				a.modal-action.modal-close.waves-effect.waves-red.btn-flat#cancelUpload #{i18n.__("editor.modal.uploading.a")}
		.modal#assetsBrowser
			.modal-content
				h4 #{i18n.__("editor.modal.assetsBrowser.h4")}
				p #{i18n.__("editor.modal.assetsBrowser.p")}
					b {% asset_path slug %}
					| 
					b {% asset_img slug [title] %}
					| 
					b {% asset_link slug [title] %}
				.assets-table
		script(src="/static/js/jquery-3.2.1.min.js", type="text/javascript")
		script(src="/static/js/materialize.min.js", type="text/javascript")
		script(src="/static/js/simplemde.min.js", type="text/javascript")
		//- script(src="/static/js/jquery.matchHeight.js", type="text/javascript")
		script.
			//- $('.toolButton').matchHeight()
			// Keep a reference
			var xhr
			var serverVersion

			$('.modal').modal()
			$("#uploading").modal({
				dismissible: false
			})
			var simplemde = new SimpleMDE({
				element: $(".editor")[0],
				autofocus: true,
				autosave: {
					enabled: true,
					uniqueId: "#{fileName}",
					delay: 3000
				},
				toolbar: ["bold", "italic", "heading", "|", "code", "quote", "link", "image", "|",  "preview", "guide"]
			});

			var getUrl = window.location.href + '&a=getContent'
			// set the value of editor on page open, if cache then cache else original
			fetch(getUrl, {credentials: 'include'})
			.then(response => response.json())
			.then((data) => {
				serverVersion = data.content
				var browserVersion = localStorage.getItem("smde_#{fileName}")
				if (browserVersion == undefined || browserVersion == null) {
					simplemde.value(serverVersion)
				} else {
					simplemde.value(browserVersion)
				}
			})
			.catch(e => console.log("Oops, error", e))

			// Button Click Action
			var reload = function() {
				// Re-get the content and show
				fetch(getUrl, {credentials: 'include'})
				.then(response => response.json())
				.then((data) => {
					serverVersion = data.content
					simplemde.value(serverVersion)
				})
				simplemde.clearAutosavedValue()
			}

			var saveUrl = '/!save'
			var save = function() {
				// Save to file
				var payload = {
					fileName: "#{fileName}",
					type: "#{type}",
					content: simplemde.value()
				}
				fetch(saveUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(payload),
					credentials: 'include'
				})
				.then(response => {
					if (response.status == 200) {
						simplemde.clearAutosavedValue()
						var $toastContent = $('<span><b>#{i18n.__("editor.script.save.succeed")}</b></span>').add($('<i class="material-icons right">check</i>'))
					}
					else {
						var $toastContent = $('<span style="color: red;"><b>#{i18n.__("editor.script.save.fail")}</b></span>').add($('<i class="material-icons right">clear</i>'))
					}
					Materialize.toast($toastContent, 3000)
				})
			}

			var deleteUrl = '/!delete'
			var deleteFn = function() {
				// Delete
				var payload = {
					fileName: "#{fileName}",
					type: "#{type}"
				}
				fetch(deleteUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(payload),
					credentials: 'include'
				})
				.then(response => {
					if (response.status == 200) {
						var $toastContent = $('<span><b>#{i18n.__("editor.script.delete.succeed")}</b></span>').add($('<i class="material-icons right">check</i>'))
						Materialize.toast($toastContent, 1000, '', () => {
							window.location.href = '/!' + payload.type
						})
					}
					else {
						var $toastContent = $('<span style="color: red;"><b>#{i18n.__("editor.script.delete.fail")}</b></span>').add($('<i class="material-icons right">clear</i>'))
						Materialize.toast($toastContent, 3000)
					}
					
				})
			}

			var showUpload = function() {
				$("#uploadFile").modal('open')
			}

			var upload = function() {
				$("#uploading").modal('open')
				var formElement = document.getElementById("uploadForm")
				var formData = new FormData(formElement)
				xhr = $.ajax({
					url: "/!upload?type=#{type}&fileName=#{fileName}",
					type: "POST",
					data: formData,
					processData: false,
					contentType: false,
					xhrFields: {
						withCredentials: true
					},
					success: () => {
						$("#uploading").modal('close')
						var $toastContent = $('<span><b>#{i18n.__("editor.script.upload.succeed")}</b></span>').add($('<i class="material-icons right">check</i>'))
						Materialize.toast($toastContent, 1000)
					},
					error: () => {
						$("#uploading").modal('close')
						var $toastContent = $('<span style="color: red;"><b>#{i18n.__("editor.script.upload.fail")}</b></span>').add($('<i class="material-icons right">clear</i>'))
						Materialize.toast($toastContent, 1000)
					},
					complete: () => {
						$("#open").val('')
						$("#open").change()
					}
				})
			}

			var cancelUpload = function() {
				// Cancel Upload
				xhr.abort()
			}

			var assetsUrl = window.location.href + '&a=getAssets'
			var assets = function() {
				fetch(assetsUrl, {credentials: 'include'})
				.then(response => {
					if (response.status == 200) return response.json()
					else {
						var $toastContent = $('<span style="color: red;"><b>#{i18n.__("editor.script.loadAsset.fail")}</b></span>').add($('<i class="material-icons right">clear</i>'))
						Materialize.toast($toastContent, 3000)
						return
					}
				})
				.then((data) => {
					var rowsHTML = ''
					for (var i = 0; i < data.assets.length; i++) {
						rowsHTML += '<tr>'
						rowsHTML += '<td>' + data.assets[i] + '</td>'
						rowsHTML += '<td>' + `<a class="deleteAsset btn right" file="${data.assets[i]}">#{i18n.__("editor.script.asset.delete")}</a>` + '</td>'
						rowsHTML += '</tr>'
					}
					var tableHTML = `<table class="striped"><tbody>${rowsHTML}</tbody></table>`
					$(".assets-table").html(tableHTML)
					$(".deleteAsset").click(deleteAsset)
					$("#assetsBrowser").modal('open')
				})
				.catch(e => console.log("Oops, error", e))
			}

			var deleteAsset = function(e) {
				var fileName = $(e.target).attr('file')
				// Delete asset
				var payload = {
					fileName: fileName,
					type: "asset",
					originalFilename: "#{fileName}",
					originalType: "#{type}"
				}
				fetch(deleteUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(payload),
					credentials: 'include'
				})
				.then(response => {
					if (response.status == 200) {
						var $toastContent = $('<span><b>#{i18n.__("editor.script.asset.delete.succeed")}</b></span>').add($('<i class="material-icons right">check</i>'))
						$("#assets").click()
						Materialize.toast($toastContent, 1000)
					}
					else {
						var $toastContent = $('<span style="color: red;"><b>#{i18n.__("editor.script.asset.delete.fail")}</b></span>').add($('<i class="material-icons right">clear</i>'))
						Materialize.toast($toastContent, 1000)
					}
					
				})
			}

			// Bind
			$("#cancel").click(reload)
			$("#save").click(save)
			$("#delete").click(deleteFn)
			$("#showUpload").click(showUpload)
			$("#upload").click(upload)
			$("#cancelUpload").click(cancelUpload)
			$("#assets").click(assets)
			$("#selectFile").click(() => {
				$("#open").click()
			})
			$("#open").change(() => {
				$("#uploadFile p").text($("#open").val())
			})

			//- window.onbeforeunload = function() {
			//- 	// if user doesn't save to server when they have modified the file, give an alert, but the auto-save is still safe.
			//- 	if (simplemde.value() != serverVersion) return "Sure?"
			//- 	else return
			//- }