doctype html
html
	head
		title Hexo 管理 编辑器 - #{fileName}
		<!--Import Google Icon Font-->
		link(rel="stylesheet", href="https://fonts.googleapis.com/icon?family=Material+Icons")
		<!--Import materialize.css-->
		link(rel="stylesheet", href="/static/css/materialize.min.css", media="screen, projection")
		link(rel="stylesheet", href="/static/css/simplemde.min.css")
		link(rel="stylesheet", href="/static/css/customize.css")
		<!--Let browser know website is optimized for mobile-->
		meta(name="viewport", content="width=device-width, initial-scale=1.0")
	body
		header
			nav.top-nav
				.container
					.nav-wrapper
						a.page-title 编辑器：当前文件 - #{fileName}
			ul.side-nav.fixed
				li
					a.nav-logo(href="/")
						i.material-icons local_cafe
						| Hexo后台管理
				li
					.divider
				li
					a.subheader 管理
				li
					a.waves-effect(href="/!") 仪表盘
				li
					a.waves-effect(href="/!post") 文章
				li
					a.waves-effect(href="/!page") 页面
				li
					a.waves-effect(href="/!logout") 登出
				li
					.divider
				li
					a.subheader 其它
				li
					a.waves-effect(href="/#!") 统计
				li
					a.waves-effect(href="/#!") 关于
		main
			.container
				.row
					.col.s12.m9.l10
						.section
							.toolbar.center
								a.waves-effect.waves-light.btn-large#cancel
									i.material-icons.left undo
									| 撤消
								a.waves-effect.waves-light.btn-large#save
									i.material-icons.left save
									| 保存
								a.waves-effect.waves-light.btn-large.modal-trigger(href="#deleteConfirm")
									i.material-icons.left delete
									| 删除
								if post_asset_folder
									a.waves-effect.waves-light.btn-large#showUpload
										i.material-icons.left file_upload
										| 上传
									a.waves-effect.waves-light.btn-large#assets
										i.material-icons.left view_array
										| 资源
							p.caption 自动保存将保存到本地浏览器，保存到服务器上请点击上方保存按钮。
							textarea.editor
		.modal#deleteConfirm
			.modal-content
				h4 您确定删除该文件吗？
				p 删除操作将无法撤销。
				p 如果存在资源文件夹，资源文件夹也将被一并删除。
			.modal-footer
				a.modal-action.modal-close.waves-effect.waves-red.btn-flat 取消
				a.modal-action.modal-close.waves-effect.waves-green.btn-flat#delete 确认
		.modal#uploadFile
			.modal-content
				h4 上传文件
				h5 注意！上传同名文件会导致覆盖。
				form(enctype="multipart/form-data", method="post", name="fileinfo", id="uploadForm")
					a.waves-effect.waves-light.btn-large#selectFile
						i.material-icons.left attach_file
						| 选择文件
					input(type="file", id="open", name="file", hidden=true)
				p
			.modal-footer
				a.modal-action.modal-close.waves-effect.waves-red.btn-flat 取消
				a.modal-action.modal-close.waves-effect.waves-green.btn-flat#upload 上传
		.modal#uploading
			.modal-content
				h4 上传中···
				.progress
					.indeterminate
			.modal-footer
				a.modal-action.modal-close.waves-effect.waves-red.btn-flat#cancelUpload 取消
		.modal#assetsBrowser
			.modal-content
				h4 资源文件夹
				p 引用资源：
					b {% asset_path slug %}
					| 
					b {% asset_img slug [title] %}
					| 
					b {% asset_link slug [title] %}
				.assets-table
		script(src="/static/js/jquery-3.2.1.min.js", type="text/javascript")
		script(src="/static/js/materialize.min.js", type="text/javascript")
		script(src="/static/js/simplemde.min.js", type="text/javascript")
		script.
			// Keep a reference
			var xhr

			$('.modal').modal()
			$("#uploading").modal({
				dismissible: false
			})
			var simplemde = new SimpleMDE({
				element: $(".editor")[0],
				autofocus: true,
				autosave: {
					enabled: true,
					uniqueId: "#{fileName}",
					delay: 3000
				},
				toolbar: ["bold", "italic", "heading", "|", "code", "quote", "link", "image", "|",  "preview", "guide"]
			});

			var getUrl = window.location.href + '&a=getContent'
			fetch(getUrl, {credentials: 'include'})
			.then(response => response.json())
			.then((data) => {
				simplemde.value(data.content)
			})
			.catch(e => console.log("Oops, error", e))

			// Button Click Action
			var cancel = function() {
				// Re-get the content and show
				fetch(getUrl, {credentials: 'include'})
				.then(response => response.json())
				.then((data) => {
					simplemde.value(data.content)
				})
				simplemde.clearAutosavedValue()
			}

			var saveUrl = '/!save'
			var save = function() {
				// Save to file
				var payload = {
					fileName: "#{fileName}",
					type: "#{type}",
					content: simplemde.value()
				}
				fetch(saveUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(payload),
					credentials: 'include'
				})
				.then(response => {
					if (response.status == 200) {
						var $toastContent = $('<span><b>保存成功！</b></span>').add($('<i class="material-icons right">check</i>'))
					}
					else {
						var $toastContent = $('<span style="color: red;"><b>保存失败！</b></span>').add($('<i class="material-icons right">clear</i>'))
					}
					Materialize.toast($toastContent, 3000)
				})
			}

			var deleteUrl = '/!delete'
			var deleteFn = function() {
				// Delete
				var payload = {
					fileName: "#{fileName}",
					type: "#{type}"
				}
				fetch(deleteUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(payload),
					credentials: 'include'
				})
				.then(response => {
					if (response.status == 200) {
						var $toastContent = $('<span><b>删除成功！</b></span>').add($('<i class="material-icons right">check</i>'))
						Materialize.toast($toastContent, 1000, '', () => {
							window.location.href = '/!' + payload.type
						})
					}
					else {
						var $toastContent = $('<span style="color: red;"><b>删除失败！</b></span>').add($('<i class="material-icons right">clear</i>'))
						Materialize.toast($toastContent, 3000)
					}
					
				})
			}

			var showUpload = function() {
				$("#uploadFile").modal('open')
			}

			var upload = function() {
				$("#uploading").modal('open')
				var formElement = document.getElementById("uploadForm")
				var formData = new FormData(formElement)
				xhr = $.ajax({
					url: "/!upload?type=#{type}&fileName=#{fileName}",
					type: "POST",
					data: formData,
					processData: false,
					contentType: false,
					xhrFields: {
						withCredentials: true
					},
					success: () => {
						$("#uploading").modal('close')
						var $toastContent = $('<span><b>上传成功！</b></span>').add($('<i class="material-icons right">check</i>'))
						Materialize.toast($toastContent, 1000)
					},
					error: () => {
						$("#uploading").modal('close')
						var $toastContent = $('<span style="color: red;"><b>上传失败！</b></span>').add($('<i class="material-icons right">clear</i>'))
						Materialize.toast($toastContent, 1000)
					},
					complete: () => {
						$("#open").val('')
						$("#open").change()
					}
				})
			}

			var cancelUpload = function() {
				// Cancel Upload
				xhr.abort()
			}

			var assetsUrl = window.location.href + '&a=getAssets'
			var assets = function() {
				fetch(assetsUrl, {credentials: 'include'})
				.then(response => {
					if (response.status == 200) return response.json()
					else {
						var $toastContent = $('<span style="color: red;"><b>资源载入失败！</b></span>').add($('<i class="material-icons right">clear</i>'))
						Materialize.toast($toastContent, 3000)
						return
					}
				})
				.then((data) => {
					var rowsHTML = ''
					for (var i = 0; i < data.assets.length; i++) {
						rowsHTML += '<tr>'
						rowsHTML += '<td>' + data.assets[i] + '</td>'
						rowsHTML += '<td>' + `<a class="deleteAsset btn right" file="${data.assets[i]}">删除</a>` + '</td>'
						rowsHTML += '</tr>'
					}
					var tableHTML = `<table class="striped"><tbody>${rowsHTML}</tbody></table>`
					$(".assets-table").html(tableHTML)
					$(".deleteAsset").click(deleteAsset)
					$("#assetsBrowser").modal('open')
				})
				.catch(e => console.log("Oops, error", e))
			}

			var deleteAsset = function(e) {
				var fileName = $(e.target).attr('file')
				// Delete asset
				var payload = {
					fileName: fileName,
					type: "asset",
					originalFilename: "#{fileName}",
					originalType: "#{type}"
				}
				fetch(deleteUrl, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(payload),
					credentials: 'include'
				})
				.then(response => {
					if (response.status == 200) {
						var $toastContent = $('<span><b>删除成功！</b></span>').add($('<i class="material-icons right">check</i>'))
						$("#assets").click()
						Materialize.toast($toastContent, 1000)
					}
					else {
						var $toastContent = $('<span style="color: red;"><b>删除失败！</b></span>').add($('<i class="material-icons right">clear</i>'))
						Materialize.toast($toastContent, 1000)
					}
					
				})
			}

			// Bind
			$("#cancel").click(cancel)
			$("#save").click(save)
			$("#delete").click(deleteFn)
			$("#showUpload").click(showUpload)
			$("#upload").click(upload)
			$("#cancelUpload").click(cancelUpload)
			$("#assets").click(assets)
			$("#selectFile").click(() => {
				$("#open").click()
			})
			$("#open").change(() => {
				$("#uploadFile p").text($("#open").val())
			})